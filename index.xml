<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CodeAndBugs</title><link>https://www.codeandbugs.com/</link><description>Recent content on CodeAndBugs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 05 Oct 2023 08:29:19 +0200</lastBuildDate><atom:link href="https://www.codeandbugs.com/index.xml" rel="self" type="application/rss+xml"/><item><title>The mystery of the second regression line</title><link>https://www.codeandbugs.com/post/second-regression-line/</link><pubDate>Thu, 05 Oct 2023 08:29:19 +0200</pubDate><guid>https://www.codeandbugs.com/post/second-regression-line/</guid><description>&lt;p>A few days ago I was stumped by a question that came up while studying Chapter
10 &amp;ldquo;Regression&amp;rdquo; of &lt;em>Statistics&lt;/em> by Freedman, Pisani and Purves.&lt;/p>
&lt;p>The context is regression with two variables.&lt;/p>
&lt;p>Notation:&lt;/p>
&lt;ul>
&lt;li>σ (sigma) and SD: standard deviation&lt;/li>
&lt;li>μ (mu): mean&lt;/li>
&lt;li>r: Pearson correlation coefficient&lt;/li>
&lt;li>x and y: the two variables&lt;/li>
&lt;li>$\sigma_x$: standard deviation of x&lt;/li>
&lt;li>$\mu_x$: mean of x&lt;/li>
&lt;/ul>
&lt;p>Chapter 8 had introduced the concept of the &lt;em>SD line&lt;/em>, which is the line that
crosses the point of means $(\mu_x,\mu_y)$ as well as
$(\mu_x+\sigma_x,\mu_y+\sigma_y)$, $(\mu_x-\sigma_x,\mu_y-\sigma_y)$,
$(\mu_x+2\cdot\sigma_x,\mu_y+2\cdot\sigma_y)$ and all other points that are an
equal number of SDs away from the point of means.&lt;/p>
&lt;p>For example here is a scatter diagram of ficticious height and weight data with
the &lt;em>SD line&lt;/em>. For those less familiar with the metric system, the mean
values 171cm and 87kg are about 5ft 7in and 192lb respectively.&lt;/p>
&lt;p>&lt;img src="plot1.svg" alt="Scatter plot with SD line" title="Scatter plot with SD line">&lt;/p>
&lt;p>Chapter 8 also introduces the correlation coefficient $r$ which measures how
strong the linear association between the variables is. The closer it is to 1
(or -1) the stronger the variables are associated. In Chapter 9 we learn that
the correlation coefficient does not change if we interchange the variables.
That is, weight is as correlated with height as height is with weight.&lt;/p>
&lt;p>In our example case $r = 0.462$&lt;/p>
&lt;p>In Chapter 10 the idea of the regression line is introduced. The regression
line is a line that best fits the data, minimizing vertical distance to the
points. It allows to predict for each value of x (height) the mean value of
y (weight). The chapter also explains that the slope of the &lt;em>SD line&lt;/em> is
$\frac{\sigma_y}{\sigma_x}$ and the slope of the regression line is
$r\frac{\sigma_y}{\sigma_x}$&lt;/p>
&lt;p>&lt;img src="plot2.svg" alt="Scatter plot with SD line and regression line" title="Scatter plot with
SD line and regression line">&lt;/p>
&lt;p>This green regression line will tell you for each value of x (height) the mean
value of y (weight). If you divide the plot into columns, the regression line
aproximately passes through the mean y (weight) value within each column.&lt;/p>
&lt;p>So far so good.&lt;/p>
&lt;p>Then, however, we learn that there is a second regression line, namely the one
that for each value of $y$ (weight) predicts the mean value of $x$ (height). That
might sound similar, but is not the same thing. If you divide the plot into
rows, this second regression line will aproximately pass through the mean x
(height) value for each row.&lt;/p>
&lt;p>What is the slope of this second regression line? It must be
$r\frac{\sigma_x}{\sigma_y}$ , right? We just invert the standard deviations.
We already know that $r$ does not change when inverting the variables, so this
is logical.&lt;/p>
&lt;p>Let&amp;rsquo;s plot the result.&lt;/p>
&lt;p>&lt;img src="plot3.svg" alt="Scatter plot with SD line, one correct and one incorrect regressionline" title="Scatter plot with SD line, one correct and one incorrect
regression line">&lt;/p>
&lt;p>It looks off. In the examples in the book both regression lines were
symmetrical with respect to the &lt;em>SD line&lt;/em>, whereas here the first regression
line is between the second regression line and the &lt;em>SD line&lt;/em>. Also, the second
regression line is supposed to minimize the horizontal distance to the points.
If you look at the bottom of the graph you can see that the line is far away
from all points. The same is true for the top of the graph.&lt;/p>
&lt;p>In the image below I have marked the points that are too far away from the
second (orange) regression line with red circles. Remember that now we are
trying to minimize the HORIZONTAL distance, which I have indicated with the
olive-green colored arrows.&lt;/p>
&lt;p>&lt;img src="plot3_notes.svg" alt="Scatter plot with SD line, one correct and one incorrect regression line aswell as some notes" title="Scatter plot with SD line, one correct and
one incorrect regression line as well as some notes">&lt;/p>
&lt;p>So, what should we change? If we use $r\frac{\sigma_y}{\sigma_x}$ we get the
slope of the first regression line, which can&amp;rsquo;t be right. And we know $r$
cannot change.&lt;/p>
&lt;p>The solution to the mystery is that the second regression line calculates $x$
with respect to $y$. So the equation is $x = slope \cdot y + intercept$. And here slope
is precisely $r\frac{\sigma_x}{\sigma_y}$ If we re-order the terms to have $y$ on the left
hand as is usual we get $y = \frac{x + intercept}{slope} = \frac{1}{slope}x + \frac{intercept}{slope}$&lt;/p>
&lt;p>And $\frac{1}{slope}$ is the same as $\frac{1}{r} \cdot
\frac{\sigma_y}{\sigma_x}$ so the only thing that changes between the slopes of
the two regression lines is that the first one includes $r$ and the second one
$\frac{1}{r}$&lt;/p>
&lt;p>We can now plot that line and voilà.&lt;/p>
&lt;p>&lt;img src="plot4.svg" alt="Scatter plot with SD line and two correct regression lines" title="Scatter plot with SD line and two correct regression lines">&lt;/p>
&lt;p>The equation of the &lt;em>SD line&lt;/em> is: $y = 1.38\cdot x - 149$&lt;/p>
&lt;p>The equation of the first regression line (green) is: $y = 0.638\cdot x - 22$&lt;/p>
&lt;p>The equation of the second regression line (orange) is: $y = 2.99\cdot x - 424$&lt;/p>
&lt;p>You can verify for yourself that if you multiply $r$ by the slope of the &lt;em>SD
line&lt;/em> (1.38) you&amp;rsquo;ll get the slope of the first (green) regression line and if you
multiply $\frac{1}{r}$ by the slope of the &lt;em>SD line&lt;/em> you&amp;rsquo;ll get the slope of
the second (orange) regression line.&lt;/p>
&lt;p>If we normalize the data (i.e. center on the mean and plot each point as the
number of SDs distance to the mean) then the slope of the &lt;em>SD line&lt;/em> will always
be 1, the slope of the first regression line will be $r$ and the slope of the
second regression line $\frac{1}{r}$ (since both SDs are 1 by definition).&lt;/p>
&lt;p>&lt;img src="plot5.svg" alt="Scatter plot with SD line and two correct regression lines(normalized)" title="Scatter plot with SD line and two correct regression
lines (normalized)">&lt;/p>
&lt;p>The equations in the normalized plot are as follows.&lt;/p>
&lt;p>&lt;em>SD line&lt;/em>: $y = x$&lt;/p>
&lt;p>First regression line (green): $y = 0.462\cdot x$&lt;/p>
&lt;p>Second regression line (orange): $y = 2.165\cdot x$&lt;/p>
&lt;p>You can find the Python code used to generate the data and plots on GitHub:
&lt;a href="https://gist.github.com/omarkohl/433968aa54d75e34a5c8b5c50a259ed7">https://gist.github.com/omarkohl/433968aa54d75e34a5c8b5c50a259ed7&lt;/a>&lt;/p></description></item><item><title>Statistical Discrimination</title><link>https://www.codeandbugs.com/post/statistical-discrimination/</link><pubDate>Thu, 13 Apr 2023 09:15:50 +0200</pubDate><guid>https://www.codeandbugs.com/post/statistical-discrimination/</guid><description>&lt;p>Let&amp;rsquo;s assume &lt;em>Rivermoor College&lt;/em> offers 100 open spots for next year.&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_open-spots.webp" alt="">&lt;/p>
&lt;p>Let&amp;rsquo;s also assume that 100 women apply &amp;hellip;&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_female-applicants.webp" alt="">&lt;/p>
&lt;p>&amp;hellip; as well as 100 men.&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_male-applicants.webp" alt="">&lt;/p>
&lt;p>The women and men are equally well qualified. There are also no differences
concerning race, sexual orientation or some other common discrimination
factors.&lt;/p>
&lt;p>At the end of the application process the result is that 60 out of 100 men
(i.e. 60%) were accepted to this college but only 40 out of 100 women (40%).
Can we conclude that sex-based discrimination took place?&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_accepted-applicants.webp" alt="">&lt;/p>
&lt;p>No matter if your answer is Yes or No, please spend a few minutes thinking
about WHY you could be right or wrong before you continue reading. How sure are
you? Imagine reading the headline: &lt;em>Study finds &amp;ldquo;Rivermoor College&amp;rdquo; accepts 40%
of women and 60% of men&lt;/em>. Would you feel outrage? Would you be convinced from
the beginning that this can&amp;rsquo;t be true?&lt;/p>
&lt;p>&lt;em>Whitespace to encourage you to think&amp;hellip;&lt;/em>&lt;/p>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;br>
&lt;p>Below is a legend for how to read all the diagrams in this post.&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_legend.webp" alt="">&lt;/p>
&lt;p>Let&amp;rsquo;s look more closely what majors this college offers. Namely three different
majors that we&amp;rsquo;ll call A, B and C. The number of spots they offer for different
majors differs, however. 70 spots for major A, 20 spots for major B and 10
spots for major C.&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_open-spots-by-major.webp" alt="">&lt;/p>
&lt;p>Now let&amp;rsquo;s look at how many women and how many men apply to each major.&lt;/p>
&lt;p>Major A (with 70 open spots) gets 20 applications by women and 80 applications
by men.&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_major-a.webp" alt="">&lt;/p>
&lt;p>Major B (with 20 open spots) gets 20 applications by women and 10 applications
by men.&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_major-b.webp" alt="">&lt;/p>
&lt;p>Major C (with 10 open spots) gets 60 applications by women and 10 applications
by men.&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_major-c.webp" alt="">&lt;/p>
&lt;p>As we can see, men and women differ in their preferences.&lt;/p>
&lt;p>How are the acceptance rates within the majors?&lt;/p>
&lt;p>For major A, 15 out of 20 women get accepted (75%) and 55 out of 80 men (69%).&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_accepted-major-a.webp" alt="">&lt;/p>
&lt;p>Therefore, there is in fact discrimination against the men (because they are
less likely to get into the major they applied for, even though there is no
meaningful distinction between them and the women applying).&lt;/p>
&lt;p>The same is true for major B. 16 out of 20 women (80%) and 4 out of 10 men
(40%) get accepted.&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_accepted-major-b.webp" alt="">&lt;/p>
&lt;p>And for major C. 9 out of 60 women (15%) and 1 out of 10 men (10%) get
accepted.&lt;/p>
&lt;p>&lt;img src="./simpsons_paradox_accepted-major-c.webp" alt="">&lt;/p>
&lt;p>Below are all the numbers summarized in a table.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Major&lt;/th>
&lt;th>Open Spots&lt;/th>
&lt;th colspan="3">Women&lt;/th>
&lt;th colspan="3">Men&lt;/th>
&lt;/tr>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>Applicants&lt;/th>
&lt;th>Accepted&lt;/th>
&lt;th>% Accepted&lt;/th>
&lt;th>Applicants&lt;/th>
&lt;th>Accepted&lt;/th>
&lt;th>% Accepted&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;th>A&lt;/th>
&lt;td>70&lt;/td>
&lt;td>20&lt;/td>
&lt;td>15&lt;/td>
&lt;td>75%&lt;/td>
&lt;td>80&lt;/td>
&lt;td>55&lt;/td>
&lt;td>69%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>B&lt;/th>
&lt;td>20&lt;/td>
&lt;td>20&lt;/td>
&lt;td>16&lt;/td>
&lt;td>80%&lt;/td>
&lt;td>10&lt;/td>
&lt;td>4&lt;/td>
&lt;td>40%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>C&lt;/th>
&lt;td>10&lt;/td>
&lt;td>50&lt;/td>
&lt;td>9&lt;/td>
&lt;td>15%&lt;/td>
&lt;td>10&lt;/td>
&lt;td>1&lt;/td>
&lt;td>10%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;th>Total&lt;/th>
&lt;td>100&lt;/td>
&lt;td>100&lt;/td>
&lt;td>40&lt;/td>
&lt;td>40%&lt;/td>
&lt;td>100&lt;/td>
&lt;td>60&lt;/td>
&lt;td>60%&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>For any woman it is more likely she will get into the major she wants than for
an equally qualified man and yet overall it looks like women are being
discriminated against. The reason being that the women show a preference for
the majors with fewer spots (i.e. the ones where it&amp;rsquo;s harder to get into). The
real discriminatory trend against men reverses when combining the groups giving
the impression of discrimination against women.&lt;/p>
&lt;p>This phenomenon is called Simpson&amp;rsquo;s paradox.&lt;/p>
&lt;blockquote>
&lt;p>Simpson&amp;rsquo;s paradox is a phenomenon in probability and statistics in which a
trend appears in several groups of data but disappears or reverses when the
groups are combined. This result is often encountered in social-science and
medical-science statistics, and is particularly problematic when frequency
data are unduly given causal interpretations.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Simpson%27s_paradox">Wikipedia&lt;/a>&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> The point of this post is not to claim that everything that looks
like discrimination is in fact a statistical effect or is in fact reverse
discrimination. The reason for choosing a hypothetical example with sexual
discrimination is to make you, the reader, more likely to remember Simpson&amp;rsquo;s
paradox. I suspect that we as humans remember things that cause strong emotions
better, in particular if they look like injustice. The data I use is completely
made up. &lt;em>Rivermoor College&lt;/em> does not exist as far as I know and should such a
college exist that is a mere coincidence. I acknowledge that for simplicity
this post assumed two genders but this is not meant to discriminate against
anyone who does not identify with said genders.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> Were you immediately convinced that the &lt;em>Rivermoor College&lt;/em> headline
could only be a lie and are you feeling smug right now? How could a single
headline give you enough information to come to such a strong conclusion? Did
you in fact have multiple hypotheses in mind, one of which should have been
&amp;ldquo;real discrimination against women is taking place&amp;rdquo;?&lt;/p>
&lt;p>Diagrams created with Inkscape. &lt;a href="./simpsons_paradox.svg">Source file&lt;/a>.&lt;/p></description></item><item><title>Randomness</title><link>https://www.codeandbugs.com/post/randomness/</link><pubDate>Thu, 03 Sep 2015 14:05:38 +0100</pubDate><guid>https://www.codeandbugs.com/post/randomness/</guid><description>&lt;p>What makes somethings random? Which of the following sequences is more random?&lt;/p>
&lt;pre>
O &lt;b>X&lt;/b> O &lt;b>X&lt;/b> &lt;b>X&lt;/b> O &lt;b>X&lt;/b> &lt;b>X&lt;/b> O &lt;b>X&lt;/b> O &lt;b>X&lt;/b> &lt;b>X&lt;/b> O &lt;b>X&lt;/b> O O &lt;b>X&lt;/b> O &lt;b>X&lt;/b> O
&lt;/pre>
&lt;pre>
&lt;b>X&lt;/b> &lt;b>X&lt;/b> &lt;b>X&lt;/b> O O &lt;b>X&lt;/b> O O O &lt;b>X&lt;/b> &lt;b>X&lt;/b> &lt;b>X&lt;/b> &lt;b>X&lt;/b> O O O &lt;b>X&lt;/b> &lt;b>X&lt;/b> &lt;b>X&lt;/b> &lt;b>X&lt;/b> &lt;b>X&lt;/b>
&lt;/pre>
&lt;p>Most of us would probably say the first sequence looks more random than the
second. This is because we as human beings are notoriously bad at judging
randomness, which is the source of many fallacies and biases (such as the
gambler&amp;rsquo;s fallacy).&lt;/p>
&lt;p>I &lt;em>made up&lt;/em> the first sequence to make it appear random. The second one was
obtained by flipping a real 2 Euro coin and writing down the results.&lt;/p>
&lt;p>Why does the first sequence look more random? Because we don&amp;rsquo;t trust long
sequences of the same element. For example consider the final 5 Xs in the
second sequence. If I were to flip the coin again how much would you bet on it
being another X (tails) or O (heads). Our intuition tells us that O &amp;lsquo;is due&amp;rsquo;
(a.k.a. the gambler&amp;rsquo;s fallacy). But the truth is that the coin has no memory and
both results are equally likely &lt;em>no matter what has happened before&lt;/em>.&lt;/p>
&lt;p>If you were to flip a coin 10 times it is not unlikely for you to get a very
uneven result (e.g. 7 heads and 3 tails) even though the probability of each one
is 50%. But if you flip a coin 10.000.000 times then it is almost impossible
that you&amp;rsquo;d get 7.000.000 heads and 3.000.000 tails. You would get around
5.000.000 each. This is called the law of big numbers. Things tend to even out
in the long run. You will have very long runs of only heads but then you will
also have long runs of only tails, and in the end they even out (more or less).&lt;/p>
&lt;p>This is the reason why statistically speaking small samples are unreliable. It
is more likely to get extreme results!&lt;/p>
&lt;p>Imagine a country where people like to eat 10 types of candy. Each has a
different flavour (e.g. chocolate, strawberry, &amp;hellip;). And imagine the preference
for a certain flavour was evenly distributed across the whole country. 10% of
people love chocolate, 10% strawberry etc. You are the representative of the
candy-manufacturing company and you want to know if production should favour
one flavour over the other. Therefore you want to conduct a survey. You choose
the smallest of samples: 1 person. You ask just one person. This person tells
you he loves pineapple flavoured candy. You deduce from your data that 100% of
people eat pineapple candy. Now imagine you choose a bigger sample of 10
people. Do you think it likely that there will be exactly one person per
flavour leading to the correct 10% each flavour result? It is unlikely that
this will happen, therefore you will still get results that don&amp;rsquo;t match the
reality of what people like.&lt;/p>
&lt;h2 id="how-to-tell-if-something-is-random">How to tell if something is random?&lt;/h2>
&lt;p>Short answer: You can&amp;rsquo;t. At least not with certainty. Why is that? Because in a
random sequence every possible outcome is possible, even the ones that
intuitively don&amp;rsquo;t look random (as seen at the beginning). Thus assume someone
gives you the sequence 11111111111111111 and asks you if it is random. You
cannot tell. It does not look random, but possibly it came out of a true random
number generator, or it is the result of someone flipping a coin.&lt;/p>
&lt;p>What you can do is perform some mathematical tests to see if the sequence you
got looks random. But it is both possible to generate a sequence that looks
random but isn&amp;rsquo;t (you just need to know the rules used for checking) and it is
possible to get a random sequence that does not pass the tests and does not
look random.&lt;/p>
&lt;p>The only thing you can do is choose your random number generator properly and
trust it.&lt;/p>
&lt;h2 id="why-does-it-matter">Why does it matter?&lt;/h2>
&lt;p>Randomness is hugely important for computer cryptography. Very often secret
keys are generated using a random number generator. If the generator is bad,
the key will be bad and can potentially be guesses/calculated (see link below
&lt;em>How I Met Your Girlfriend&lt;/em>).&lt;/p>
&lt;h2 id="prng-pseudo-random-number-generator">PRNG (Pseudo random number generator)&lt;/h2>
&lt;p>A PRNG generates &lt;em>random&lt;/em> numbers in some arithmetic (mathematical) way and is
repeatable. One basic example is the &lt;em>Middle square method&lt;/em> that was described
in the middle ages and re-invented by John von Neumann.&lt;/p>
&lt;p>We take some number (we call it the &lt;em>seed&lt;/em>) and multiply it by itself. Then we
take the middle digits of the result as the first &lt;em>random&lt;/em> number. Repeat the
process with this new &lt;em>random&lt;/em> number.&lt;/p>
&lt;p>For instance if the seed is 42:&lt;/p>
&lt;pre>&lt;code>42 * 42 = 1765
The middle digits are 76
76 * 76 = 5776
The middle digits are 77
77 * 77 = 5929
The middle digits are 92
etc.
&lt;/code>&lt;/pre>
&lt;p>This gives us following sequence of numbers: 76, 77, 92, 46, 11, 12, 14, 19, 36, 29, 84, 5, 2&lt;/p>
&lt;p>They look pretty random don&amp;rsquo;t they?&lt;/p>
&lt;p>The main problem with PRNGs is that they tend to form &lt;em>circles&lt;/em> where values repeat themselves.&lt;/p>
&lt;p>For instance if we take 79 as the seed:&lt;/p>
&lt;pre>&lt;code>79 * 79 = 6241
The middle digits are 24
24 * 24 = 576
The middle digits are 57 (0576)
57 * 57 = 3249
The middle digits are 24
24 * 24 = 576
The middle digits are 57 (0576)
57 * 57 = 3249
The middle digits are 24
24 * 24 = 576
The middle digits are 57 (0576)
etc.
&lt;/code>&lt;/pre>
&lt;p>The resulting sequence is therefore: 79, 24, 57, 24, 57, 24, &amp;hellip;&lt;/p>
&lt;p>An attacker who observes the output of the PRNG will be able to predict the
next value before it happens. These values are no longer random.&lt;/p>
&lt;p>Another problem with the &lt;em>Middle square method&lt;/em> is that if the middle digits
are 00 then all following values will be 00 as well (because 0 * 0 = 0).&lt;/p>
&lt;p>This is what happens with the first sequence above (the one that started with
42 * 42 = 76). If we continue:&lt;/p>
&lt;pre>&lt;code>2 * 2 = 4
The middle digits are 00 (0004)
0 * 0 = 0
The middle digits are 00 (0000)
0 * 0 = 0
etc.
&lt;/code>&lt;/pre>
&lt;p>Kevin Mitnick describes an amusing story in &lt;em>The Art of Intrusion&lt;/em> about
hacking a Casino machine by timing the exact moment to hit the &lt;em>Play&lt;/em> button.
They had found out what kind of PRNG (a LFSR - Linear Feedback Shift Register)
the machine used and by playing once and then entering the cards displayed by
the machine into their computer they were able to calculate how long it would
take the machine to make the full &lt;em>circle&lt;/em> and get back to &lt;em>Royal Flush&lt;/em>.&lt;/p>
&lt;p>The big advantage of PRNGs is that they are very cheap and very fast. And being
able to repeat the values (by supplying the same seed as the first time) is
also an advantage when you only want to test your machine or software.&lt;/p>
&lt;h2 id="true-random-number-generator">True Random Number Generator&lt;/h2>
&lt;p>A TRNG (True Random Number Generator) is a hardware device that observes some
unpredictable physical event and records the results. For example you might
build a machine that observes a casino roulette and outputs the results as
random numbers. In practice this machine would be very slow and therefore
expensive but it would work.&lt;/p>
&lt;p>Very often microscopic events such as thermal noise, radioactive decay,
photoelectric effect etc. are used because of their unpredictable nature.&lt;/p>
&lt;p>It is possible to do this in software by measuring (in theory) unpredictable
events such as the time between keystrokes, mouse movements, arrival time of
network packets etc. In theory a very sophisticated attacker could manipulate a
lot of these events but in practice it seems to be good enough.&lt;/p>
&lt;h1 id="more-info">More info&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Gambler%27s_fallacy">Gambler&amp;rsquo;s fallacy&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cs.ucsb.edu/~koc/ns/docs/slides/14-pgp/chap5-prng.pdf">Pseudorandom Bits and Sequences&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Hardware_random_number_generator">Hardware random number generator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator">Cryptographically secure pseudorandom number generator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=fEmO7wQKCMw">DEFCON 18: How I Met Your Girlfriend - Part 1&lt;/a>,
&lt;a href="https://www.youtube.com/watch?v=2ctRfWnisSk">Part 2&lt;/a>,
&lt;a href="https://www.youtube.com/watch?v=vJtmZZGcR54">Part 3&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>JavaScript: this and that</title><link>https://www.codeandbugs.com/post/js-this-and-that/</link><pubDate>Tue, 01 Sep 2015 11:21:05 +0200</pubDate><guid>https://www.codeandbugs.com/post/js-this-and-that/</guid><description>&lt;p>Have you ever wondered about the JavaScript &lt;em>this&lt;/em> and &lt;em>that&lt;/em> variables?&lt;/p>
&lt;h2 id="this">&lt;em>this&lt;/em>&lt;/h2>
&lt;p>The explanation is quite simple. Every JavaScript (JS) function implicitly has
a variable called &lt;em>this&lt;/em>. The value of this variable depends on the way the
functions is called.&lt;/p>
&lt;p>For instance if the function is called as a method then &lt;em>this&lt;/em> is a reference
to the object on whom you are calling the method.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">myfunc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">newValue&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">newValue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">someObj&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">someObj&lt;/span>.&lt;span style="color:#a6e22e">mymethod&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">myfunc&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">someObj&lt;/span>.&lt;span style="color:#a6e22e">mymethod&lt;/span>(&lt;span style="color:#ae81ff">123&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">someObj&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span>); &lt;span style="color:#75715e">// value === 123
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If you call that function simply as a function, then &lt;em>this&lt;/em> is a reference to
the global context (window). For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">myfunc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">newValue&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">newValue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// value === undefined
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// window.value === undefined
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">myfunc&lt;/span>(&lt;span style="color:#ae81ff">123&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">value&lt;/span>); &lt;span style="color:#75715e">// global variable value === 123
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(window.&lt;span style="color:#a6e22e">value&lt;/span>); &lt;span style="color:#75715e">// global variable value === 123
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="that">&lt;em>that&lt;/em>&lt;/h2>
&lt;p>Now the real problem comes when you try to define a function inside a method
(e.g. to declare a callback that is triggered on some event).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">buttonHandler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">element&lt;/span>&lt;span style="color:#f92672">:&lt;/span> document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;bigButton&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">counter&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">startCounting&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Start counting...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">element&lt;/span>.&lt;span style="color:#a6e22e">onclick&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Clicked on button&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">counter&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">buttonHandler&lt;/span>.&lt;span style="color:#a6e22e">startCounting&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Click on the button 5 times
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">buttonHandler&lt;/span>.&lt;span style="color:#a6e22e">counter&lt;/span>); &lt;span style="color:#75715e">// counter === 0, why is that?
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The function that is triggered by &lt;em>onclick&lt;/em> events tries to increase the
counter of the &lt;em>buttonHandler&lt;/em> but &lt;em>this&lt;/em> is no longer a reference to the
&lt;em>buttonHandler&lt;/em> object but to the global context (window). (The global variable
&lt;em>counter&lt;/em> does have value 5. Is that what you intended?)&lt;/p>
&lt;p>The solution is a simple &lt;strong>convention&lt;/strong>. Create a variable &lt;em>that&lt;/em> that points
to the outer &lt;em>this&lt;/em> and can be used inside the callback functions.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">buttonHandler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">element&lt;/span>&lt;span style="color:#f92672">:&lt;/span> document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;bigButton&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">counter&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">startCounting&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Start counting...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">that&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">element&lt;/span>.&lt;span style="color:#a6e22e">onclick&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Clicked on button&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">that&lt;/span>.&lt;span style="color:#a6e22e">counter&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">buttonHandler&lt;/span>.&lt;span style="color:#a6e22e">startCounting&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Click on the button 5 times
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">buttonHandler&lt;/span>.&lt;span style="color:#a6e22e">counter&lt;/span>); &lt;span style="color:#75715e">// counter === 5
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="further-reads">Further reads&lt;/h2>
&lt;ul>
&lt;li>Douglas Crockfords excellent book &lt;em>Javascript: The Good Parts&lt;/em>&lt;/li>
&lt;li>A very insightful &lt;a href="http://yehudakatz.com/2011/08/11/understanding-javascript-function-invocation-and-this/">blogpost by Yehuda
Katz&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>About</title><link>https://www.codeandbugs.com/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.codeandbugs.com/about/</guid><description>&lt;h1 id="about">About&lt;/h1>
&lt;p>Hey there!&lt;/p>
&lt;p>I&amp;rsquo;m Omar and this is my blog. I write about software development and &amp;hellip; everything else.&lt;/p>
&lt;p>Do you have feedback? Please send me a &lt;a href="https://github.com/omarkohl/codeandbugs.com">pull request&lt;/a> or an e-mail &lt;a href="mailto:info@codeandbugs.com">info@codeandbugs.com&lt;/a> .&lt;/p>
&lt;h2 id="license">License&lt;/h2>
&lt;p>Unless otherwise specified code samples are licensed under &lt;a href="https://choosealicense.com/licenses/mit/">MIT&lt;/a> and other content under &lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en">CC BY-NC-SA 4.0&lt;/a>&lt;/p>
&lt;h2 id="credits">Credits&lt;/h2>
&lt;ul>
&lt;li>Powered by &lt;a href="https://gohugo.io/">Hugo&lt;/a>&lt;/li>
&lt;li>Theme &lt;a href="https://github.com/queensferryme/hugo-theme-texify">TeXify&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>